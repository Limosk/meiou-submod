# country 
on_startup = {
	if = {
		limit = {
			tag = AAA
		}
		set_key = { lhs = LegalismDate value = 1000 }
		set_key = { lhs = MeritocracyDate value = 1000 }
		set_key = { lhs = BankingDate value = 1350 }

		if = {
			limit = {
				NOT = { has_global_flag = Global_Modi_Set }
			}
			Modi_Global = yes
			set_global_flag = Global_Modi_Set
		}
	}
	emperor = {
		save_global_event_target_as = Emperor
	}
	if = {
		limit = {
			is_emperor_of_china = yes
		}
		save_global_event_target_as = EmperorOfChina
	}
	# System Setup
	if = {
		limit = {
			NOT = {
				has_global_flag = POP_RanInit
			}
		}
		AAA = {
			every_province = {
				limit = {
					OR = {
						continent = north_america
						continent = south_america
						has_province_modifier = trading_post_province
						region = australia_region
						area = maui_area
						region = west_siberia_region
						region = east_siberia_region
						region = east_manchuria_region
						region = outer_mongolia_region
						AND = {
							has_province_modifier = subartic_islands_unrest
							NOT = { continent = oceania }
						}
					}
				}
				set_province_flag = ColonyBecomesOwner
			}
			every_province = {
				limit = {
					OR = {
						region = indonesia_region
						region = philippines_region
						area = hokkaido_area
					}
				}
				set_province_flag = NoRandomSpread
			}
			if = {
				limit = {
					# always = yes when not running a sim
					# always = no when running a sim
					always = yes
				}
				### pre-clean data
				country_event = { id = POP_StartUp.018 } 
				## load sim file
				country_event = { id = POP_Init.001 }
				## load additional prov data
				country_event = { id = POP_Rugged.001 } 
				### startup for post-sim
				country_event = { id = POP_StartUp.019 } 
				
				# flavor and CB setup
				country_event = { id = steppe.1 }
				country_event = { id = setup_event.1 }
				country_event = { id = calcul_byoa.1 }
				country_event = { id = ghazi.4 }

				country_event = { id = setup_event.11 }
				
				country_event = { id = cb_types.1 }
				country_event = { id = cb_types.2 }
				country_event = { id = cb_types.3 }
				country_event = { id = cb_types.4 }
				
				country_event = { id = POP_Stockpile.0031 }
				
				# Reload DG data
				country_event = { id = POP_DG.001 }
				
				# Finish post-sim startup
				country_event = { id = POP_StartUp.020 }
			}
			else = {
				country_event = { id = POP_StartUp.021 } ### startup to start a sim
				country_event = { id = distance_calc.1 }  # Set province position values from generated files
				country_event = { id = POP_Setup.001 }
				country_event = { id = POP_StartUp.001 }
				country_event = { id = POP_StartUp.002 }
				country_event = { id = POP_StartUp.003 }
				country_event = { id = POP_StartUp.004 }
				country_event = { id = POP_StartUp.005 }
				country_event = { id = POP_DG.001 }
				country_event = { id = POP_StartUp.012 }
			}
			set_global_flag = not_samerica_smallpox #cleared when smallpox appears in south america
			set_global_flag = not_namerica_smallpox #cleared when smallpox appears in north america
			set_global_flag = not_camerica_smallpox #cleared when smallpox appears in central america
			set_global_flag = POP_RanInit
		}
	}
	if = {
		limit = {
			tag = AAA
		}
		tradenode_centers = {
			every_trade_node_member_province = {
				if = {
					limit = {
						isValidEmpty = no
					}
					add_permanent_province_modifier = {
						name = river_notify
						duration = -1
					}
				}
			}
		}
        set_key = { lhs = ID_TN value = 1 }

        tradenode_centers = { # Assign unique trade node center ID's
            set_key = { lhs = ID_TN which = ROOT }

            TN_effect0 = yes

            ROOT = {
                change_key = { lhs = ID_TN value = 1 }
            }
        }
		every_province = {
			if = {
				limit = {
					OR = {
						owned_by = AAA
						is_wasteland = yes
					}
				}
				set_key = { lhs = Land_PSize value = 0 }
				clr_province_flag = Data
			}
		}
		country_event = {
			id = POP_Census.002
		}
        every_province = {
            limit = {
				isValidEmpty = yes
            }
			POP_GetLandTime = yes
		}
	}
	if = {
		limit = {
			OR = {
				tag = TEU
				tag = LVO
			}
			ai = no
		}
		every_province = {
			limit = {
				OR = {
					has_province_modifier = Teuton_Commandery_High
					has_province_modifier = Teuton_Commandery_Med
					has_province_modifier = Teuton_Commandery_Low
				}
			}
			if = {
				limit = {
					has_province_modifier = Teuton_Commandery_High
				}
				remove_province_modifier = Teuton_Commandery_High
				add_permanent_province_modifier = { name = Teuton_Commandery_High_trade duration = -1 }
			}
			else_if = {
				limit = {
					has_province_modifier = Teuton_Commandery_Med
				}
				remove_province_modifier = Teuton_Commandery_Med
				add_permanent_province_modifier = { name = Teuton_Commandery_Med_trade duration = -1 }
			}
			else_if = {
				limit = {
					has_province_modifier = Teuton_Commandery_Low
				}
				remove_province_modifier = Teuton_Commandery_Low
				add_permanent_province_modifier = { name = Teuton_Commandery_Low_trade duration = -1 }
			}
		}
	}
	if = {
		limit = {
			tag = KNI
			ai = no
		}
		every_province = {
			limit = {
				OR = {
					has_province_modifier = Knights_Commandery_High
					has_province_modifier = Knights_Commandery_Med
					has_province_modifier = Knights_Commandery_Low
				}
			}
			if = {
				limit = {
					has_province_modifier = Knights_Commandery_High
				}
				remove_province_modifier = Knights_Commandery_High
				add_permanent_province_modifier = { name = Knights_Commandery_High_trade duration = -1 }
			}
			else_if = {
				limit = {
					has_province_modifier = Knights_Commandery_Med
				}
				remove_province_modifier = Knights_Commandery_Med
				add_permanent_province_modifier = { name = Knights_Commandery_Med_trade duration = -1 }
			}
			else_if = {
				limit = {
					has_province_modifier = Knights_Commandery_Low
				}
				remove_province_modifier = Knights_Commandery_Low
				add_permanent_province_modifier = { name = Knights_Commandery_Low_trade duration = -1 }
			}
		}
	}
	POL =  {
		country_event = { 
			id = flavor_pol.499 
			days = 7 
		}
	}
	FEZ =  {
		country_event = { 
			id = flavor_fez.02 
			days = 3 
		}
	}
	BRA = {
		country_event = {
			id = flavor_brapru.100
			days = 20
		}
	}
	CAS = {
		country_event = {
			id = flavor_spa.8001
		}
	}
	AAA = {
		if = {
			limit = {
				always = no 
			}
			set_global_flag = first_time_data_collection
			country_event = {
				id = POP_Census.995
				days = 40
			}
		}
	}
	if = {
		limit = {
			ai = yes
		}
		set_country_flag = Mil_BUBudget
        set_key = { lhs = Mil_BUBudgetMult value = 55.555 } ## *0.9 == ~0.5
	}
	else = {
		set_country_flag = Mil_BUBudget
        set_key = { lhs = Mil_BUBudgetMult value = 55.555 }
	}
	if = {
		limit = { has_country_flag = very_easy_difficulty }
		add_country_modifier = { name = very_easy_difficulty duration = -1 hidden = yes }
		clr_country_flag = very_easy_difficulty
	}
	else_if = {
		limit = { has_country_flag = easy_difficulty }
		add_country_modifier = { name = easy_difficulty duration = -1 hidden = yes }
		clr_country_flag = easy_difficulty
	}
	else_if = {
		limit = { has_country_flag = normal_difficulty }
		add_country_modifier = { name = normal_difficulty duration = -1 hidden = yes }
		clr_country_flag = normal_difficulty
	}
	else_if = {
		limit = { has_country_flag = hard_difficulty }
		add_country_modifier = { name = hard_difficulty duration = -1 hidden = yes }
		clr_country_flag = hard_difficulty
	}
	else_if = {
		limit = { has_country_flag = expert_difficulty }
		add_country_modifier = { name = expert_difficulty duration = -1 hidden = yes }
		clr_country_flag = expert_difficulty
	}
}

# country
on_religion_change = {
	events = {
	}
	if = {
		limit = {
			has_heir = yes
		}
		set_heir_religion = ROOT
	}
	if = {
		limit = {
			has_regency = no
		}
		set_ruler_religion = ROOT
	}
	if = {
		limit = {
			has_dlc = "Rights of Man"
			has_consort = yes
		}
		set_consort_religion = ROOT
	}
	capital_scope = {
		DG_on_province_religion_converted_effect = yes
		every_owned_province = { MN_RlgConv = yes }
	}
	swap_non_generic_missions = yes
	if = {
		limit = {
			religion = catholic
		}
		if = {
			limit = { has_global_flag = wal_schism_mended }
			SetWaldensianAspects = yes
		}
		else_if = {
			limit = { has_global_flag = lol_schism_compromise }
			SetLollardCompromiseAspects = yes
		}
		else_if = {
			limit = { has_global_flag = lol_schism_mended }
			SetLollardAspects = yes
		}
		else_if = {
			limit = { has_global_flag = hus_schism_compromise }
			SetHussiteCompromiseAspects = yes
		}
		else_if = {
			limit = { has_global_flag = hus_schism_mended }
			SetHussiteAspects = yes
		}
		else_if = {
			limit = { has_global_flag = pro_schism_compromise }
			SetProtestantCompromiseAspects = yes
		}
		else_if = {
			limit = { has_global_flag = pro_schism_mended }
			SetProtestantAspects = yes
		}
		else_if = {
			limit = { has_global_flag = ref_schism_compromise }
			SetReformedCompromiseAspects = yes
		}
		else_if = {
			limit = { has_global_flag = ref_schism_mended }
			SetReformedAspects = yes
		}
		else = {
			SetCatholicAspects = yes
		}
	}
	if = {
		limit = {
			religion = holyleague
		}
		SetCatholicAspects = yes
	}
	else_if = {
		limit = {
			religion = waldensian
		}
		SetWaldensianAspects = yes
		if = {
			limit = { NOT = { has_country_flag = waldensian_presence } }
			hidden_effect = {
				country_event = { id = DG_Waldensians.002 }
				capital_scope = { MN_HeresySpread = { typefrom = which from = MN_S0 to = 5 incr = 0.05 typeIncr = value } }
				every_owned_province = { random = { chance = 70 MN_HeresySpread = { typefrom = which from = MN_S0 to = 5 incr = 0.05 typeIncr = value } } }
			}
		}
	}
	else_if = {
		limit = {
			religion = lollard
		}
		SetLollardAspects = yes
		if = {
			limit = { NOT = { has_country_flag = lollard_presence } }
			hidden_effect = {
				country_event = { id = DG_Lollards.002 }
				capital_scope = { MN_HeresySpread = { typefrom = which from = MN_S0 to = 6 incr = 0.05 typeIncr = value } }
				every_owned_province = { random = { chance = 70 MN_HeresySpread = { typefrom = which from = MN_S0 to = 6 incr = 0.05 typeIncr = value } } }
			}
		}
	}
	else_if = {
		limit = {
			religion = hussite
		}
		SetHussiteAspects = yes
		if = {
			limit = { NOT = { has_country_flag = hussite_presence } }
			hidden_effect = {
				country_event = { id = DG_Hussites.002 }
				capital_scope = { MN_HeresySpread = { typefrom = which from = MN_S0 to = 4 incr = 0.05 typeIncr = value } }
				every_owned_province = { random = { chance = 70 MN_HeresySpread = { typefrom = which from = MN_S0 to = 4 incr = 0.05 typeIncr = value } } }
			}
		}
	}
	else_if = {
		limit = {
			religion = protestant
		}
		SetProtestantAspects = yes
		if = {
			limit = { NOT = { has_country_flag = protestant_presence } }
			hidden_effect = {
				country_event = { id = DG_Protestant.002 }
				capital_scope = { MN_HeresySpread = { typefrom = which from = MN_S0 to = 2 incr = 0.10 typeIncr = value } }
				every_owned_province = { random = { chance = 70 MN_HeresySpread = { typefrom = which from = MN_S0 to = 2 incr = 0.10 typeIncr = value } } }
			}
		}
	}
	else_if = {
		limit = { religion = reformed }
		SetReformedAspects = yes
		if = {
			limit = { NOT = { has_country_flag = reformed_presence } }
			hidden_effect = {
				country_event = { id = DG_Reformed.002 }
				capital_scope = { MN_HeresySpread = { typefrom = which from = MN_S0 to = 3 incr = 0.10 typeIncr = value } }
				every_owned_province = { random = { chance = 70 MN_HeresySpread = { typefrom = which from = MN_S0 to = 3 incr = 0.10 typeIncr = value } } }
			}
		}
	}
	every_owned_province = {
		random_list = {
			50 = { add_or_extend_province_modifier_hidden_effect = { NAME = religious_enthusiasm DURATION = 9125 } }
			30 = { add_or_extend_province_modifier_hidden_effect = { NAME = heretic_centre DURATION = 9125 } }
			20 = {  }
		}
	}
	if = {
		limit = { tag = PAP NOT = { religion = catholic } }
		change_tag = ROM
		secularisation_effect = yes
	}
}

# country.
on_secondary_religion_change = {
}

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
}

# country
on_colonial_liberation = {
	country_event = {
		id = colonial_nation.90
		days = 1
	}
}

# country
on_colonial_reintegration = {
	events = { colonial_nation.91 }
}

# country
on_peace_actor = {
	if = {
		limit = {
			OR = {
				primary_culture = turkish
				primary_culture = turkoman
			}
			AAA = { has_country_flag = Anatolian_PowerActive }
		}
		AAA = { country_event = { id = ghazi.4 } }
	}
	events = {
		prisonner_of_war.101		# Post-war clean-up
	}
	set_country_flag = ai_tax_recalc
	#MP_RaisedPulse = yes
}

# country
on_peace_recipient = {
	events = {
		prisonner_of_war.101		# Post-war clean-up
	}
	set_country_flag = ai_tax_recalc
}

# country
# root = winning country, from = loser country
on_war_won = {
	if = {
		limit = {
			OR = {
				AND = {
					is_subject_of_type = daimyo_vassal
					NOT = { check_key = { lhs = Vassal_Type value = 1 } }
				}
				is_subject_of_type = vassal
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						NOT = { culture_group = japanese_g }
						overlord = { NOT = { culture_group = japanese_g } }
					}
					is_subject_of_type = vassal
				}
			}
			overlord = {
				create_subject = {
					subject_type = custom_vassal
					subject = ROOT
				}
			}
		}
		else_if = {
			limit = {
				overlord = { tag = LIT }
				tag = KIE
			}
			overlord = {
				create_subject = {
					subject_type = decentralized_vassal
					subject = ROOT
				}
			}
			define_ruler = {
				name = "Fiodor" # His pagan name is unknown
				dynasty = "Gediminai"
				culture = lithuanian
				ADM = 3
				DIP = 3
				MIL = 3
				claim = 95
			}
		}
	}
	clr_country_flag = steppe_declined_tributary
	vassal_type_tracking_effect = yes
	events = {
		japan.3						# Shogunate is victorious
		japan.4						# Emperor is victorious
		japan.19					# Usurper is defeated
		japan.28					# The position of Kanrei is taken through war
		flavor_chu.1				# winner inherits CHU
		red_turban.009				# Post-war core clean-up in China
		red_turban.010				# Post-war core gain in China
        Plague_Spawner.3            # Salmonella
		prisonner_of_war.101		# Post-war clean-up
	}
	if = {
		limit = {
			tag = SWE
			FROM = { tag = RSW NOT = { num_of_cities = 16 } }
		}
		country_event = { id = flavor_swe.4303 }
	}
	if = {
		limit = {
			tag = RSW
			num_of_cities = 17
			FROM = { tag = SWE }
		}
		country_event = { id = flavor_swe.4304 }
	}
	if = {
		limit = {
			is_emperor = yes
			has_global_flag = league_war
			is_in_league_war = no
		}
		country_event = { id = DG_Catholics.031 }
	}
	if = {
		limit = {
			NOT = {
				is_year = 1500
			}
			
			OR = {
				primary_culture = turkish
				primary_culture = turkoman
			}
	
			religion_group = muslim
			
			check_key = { lhs = Loot_Pool value = 100 }
			
			NOT = {
				has_country_flag = ghazi_fired
			}
			
			is_at_war = no
			
			FROM = {
				OR = {
					tag = BYZ
					tag = BUL
					tag = SER
					tag = EPI
					tag = DOB
					tag = VID
					tag = HUN
					tag = TRE
					tag = SRR
					tag = TSL
					tag = MON
					tag = VUK
					tag = MKO
					tag = VBZ
					tag = HUM
					tag = ALC
					tag = ALB
					tag = ATH
					tag = MOE
					tag = ACH
					tag = WAL
					tag = MOL
				}
			}
		}
		set_country_flag = ghazi_fired
		
		country_event = {
			id = ghazi.1
		}
	}
}

# country
# root = loser country, from = winner country
on_war_lost = {
	if = {
		limit = {
			OR = {
				AND = {
					is_subject_of_type = daimyo_vassal
					NOT = { check_key = { lhs = Vassal_Type value = 1 } }
				}
				is_subject_of_type = vassal
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						NOT = { culture_group = japanese_g }
						overlord = { NOT = { culture_group = japanese_g } }
					}
					is_subject_of_type = vassal
				}
			}
			overlord = {
				create_subject = {
					subject_type = custom_vassal
					subject = ROOT
				}
			}
		}
		else_if = {
			limit = {
				overlord = { tag = LIT }
				tag = KIE
			}
			overlord = {
				create_subject = {
					subject_type = decentralized_vassal
					subject = ROOT
				}
			}
			define_ruler = {
				name = "Fiodor" # His pagan name is unknown
				dynasty = "Gediminai"
				culture = lithuanian
				ADM = 3
				DIP = 3
				MIL = 3
				claim = 95
			}
		}
	}
	if = {
		limit = {
			is_emperor = yes
			has_global_flag = league_war
			is_in_league_war = no
		}
		country_event = { id = DG_Catholics.031 }
	}
	clr_country_flag = steppe_declined_tributary
	vassal_type_tracking_effect = yes
	events = {
		flavor_chu.7				# Set flag on CHU when they get PU'd
		flavor_chu.1				# winner inherits CHU
		new_world.1					# winner inherits new world native
		prisonner_of_war.101		# Post-war clean-up
	}
}

# country
# root = winning country, from = loser country
on_battle_won_country = {
	add_horde_unity = 1
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	add_horde_unity = -2
	events = {
		red_turban.014
		timur.21
		timur.23
		timur.42
		timur.56
	}
}

# province
# root = location, from = loser country
on_battle_won_province = {
}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {
}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
}

# province
# root = location, from = country doing it
on_added_to_trade_company = {
	#log = "[Root.GetName] added to [From.GetName] trade company"
}

# province
# root = location, from = country doing it
on_removed_from_company = {
	#log = "[Root.GetName] removed from [From.GetName] trade company"
}

# province
# root = location, from = country doing it
on_company_formed = {

}

# province
# root = location, from = country doing it
on_company_disolved = {

}

# province
# root = location, from = winner country
on_battle_lost_province = {
}

# country
# root = winning country, from = location
on_siege_won_country = {
	events = {
		tianxia.136 #Fall of Chinese Capital to a prince
		# White/Blue unification
		timur.53
		timur.54
		Serbia.01
		timur.57
	}
	events = {
	}
}

# country
# root = losing country, from = location
on_siege_lost_country = {
	events = {
		red_turban.014
		timur.21
		timur.23
		timur.42
		timur.56
		Ottomans.018
	}
	
}

# province
# root = location, from = winning country
on_siege_won_province = {
	if = {
		limit = {
			NOT = {
				controlled_by = owner
			}
		}
		if = {
			limit = {
				FROM = {
					check_key = { lhs = Special_Revolt value = 0.001 }
				}
				
				culture = FROM
				
				NOT = {
					is_core = FROM
				}
			}
			add_core = FROM
		}
		
		if = {
			limit = {
				FROM = {
					check_key = { lhs = Special_Revolt value = 0.001 }
				}
				
				is_core = FROM
			}
			FROM = {
				country_event = {
					id = POP_Looting.006
				}
			}
		}
		else = {
			province_event = {
				id = POP_Looting.004
			}
		}
	}
	if = { 
		limit = {
			FROM = {
				NOT = { 
					owns = ROOT
				}
				mil_tech = 11
			}
			has_building = theodosian_walls_b
		}
		remove_building = theodosian_walls_b
	}
	events = {
	}
}

# province
# root = location, from = losing country
on_siege_lost_province = {
	events = {
		tianxia.150				# Chinese Capital falls
		canarias.10				# Conquistadors overpower the Canarias
	}
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
#	colony_abandon_backup_effect = yes
	log = "[FROM.GetName] Abandonment of [ROOT.GetName]"
}

# country
on_monarch_death = {
	temporary_union_break_effect = yes #ends any temporary PUs
	#custom_regency_council_effect = yes #renames regency councils according to the scripted effect, keep in mind that it spawns a "A New $MonarchTitle$" message when it does
	appanage_reversion_effect = yes #for vassals being annexed or PUd under conditions
	clr_country_flag = Tokhtamysh_Has
	if = {
		limit = {
			tag = POL
		}
		POL = { country_event = { id = flavor_pol.500 days = 2 } } #death of Kazimierz
		POL = { country_event = { id = flavor_pol.505 days = 20 } } #mazovia thing
		POL = { country_event = { id = flavor_pol.302 days = 2 } } #HUN-PU-> woman
		POL = { country_event = { id = flavor_pol.303 days = 2 } } #HUN -PU-> male
	}
	
	if = {
		limit = {
			OR = {
				competitive_trigger = yes
				is_key_equal = { lhs = Pol_Succession value = 1 }
			}
			is_colonial_nation = no
			num_of_cities = 4
			has_country_flag = POP_Init
			NOT = { Timur_Has = yes }
		}
		random_owned_province = {
			limit = {
				is_capital = no
				is_overseas = no
				development = 5
			}
			pretender_rebels = 1
		}
	}
	if = {
		limit = {
			steppe_trigger = yes
			has_country_flag = POP_Init
			NOT = { Timur_Has = yes }
		}
		add_horde_unity = -20
		Public_ChangePowerbrokerLoyaltyTooltipProv = { Powerbroker=TR Amount=-5 }
		
	}
	else_if = {
		limit = {
			is_nomad = yes
			has_country_flag = POP_Init
			NOT = { Timur_Has = yes }
		}
		add_horde_unity = -10
		Public_ChangePowerbrokerLoyaltyTooltipProv = { Powerbroker=TR Amount=-2.5 }
	}
	events = {
		Horde_Collapse.10			# Horde puppet master dead
		Horde_Collapse.14			# Horde great khan dead
		japan.15			#Underage Shogun
		japan.24			#Adopting accurate name
		japan.25			#Losing Kanrei position
		flavor_anj.1
		kalmar.006 
		kalmar.016
	}
	if = {
		limit = {
			has_country_flag = Horde_Timur
			is_year = 1420
			NOT = { has_country_flag = Timur_Revolts }
		}
		set_country_flag = Timur_Revolts
		every_subject_country = {
			add_liberty_desire = 25
		}
	}
	if = {
		limit = {
			Timur_Has = yes
			NOT = { has_country_flag = Timur_Dying }
		}
		country_event = { id = timur.17 } # should Timur die
	}
	if = {
		limit = {
			OR = { tag = DEN tag = DAN }
			is_religion_enabled = protestant
			NOT = { religion_years = { anglican = 50 } }
			NOT = { has_country_flag = sankt_sorens_kirke }
			NOT = { has_country_flag = had_counts_feud }
		}
		random = {
			chance = 75
			country_event = { id = counts_feud.001 days = 1825 random = 365 }
		}
	}
}

# country
on_new_monarch = {
	country_event = { id = PTM_Politics.007 } # Ruler Calc for Exec Auth
	country_event = { id = PTM_Politics.005 } # Ruler Alignment for Factions
	if = {
		limit = {
			legitimacy_equivalent = 50
		}
		POP_GetLegitimacy = { return = Tmp_0 }
		subtract_key = { lhs = Tmp_0 value = 50 }
		divide_key = { lhs = Tmp_0 value = 2 }

		if = { limit = { check_key = { lhs = Tmp_0 value = 16 } } add_legitimacy = -16 add_republican_tradition = -13 add_devotion = -16 add_horde_unity = -16 add_meritocracy = -16 }
		if = { limit = { check_key = { lhs = Tmp_0 value = 8 } } add_legitimacy = -8 add_republican_tradition = -6.5 add_devotion = -8 add_horde_unity = -8 add_meritocracy = -8 }
		if = { limit = { check_key = { lhs = Tmp_0 value = 4 } } add_legitimacy = -4 add_republican_tradition = -3.5 add_devotion = -4 add_horde_unity = -4 add_meritocracy = -4 }
		if = { limit = { check_key = { lhs = Tmp_0 value = 2 } } add_legitimacy = -2 add_republican_tradition = -1.5 add_devotion = -2 add_horde_unity = -2 add_meritocracy = -2 }
		if = { limit = { check_key = { lhs = Tmp_0 value = 1 } } add_legitimacy = -1 add_republican_tradition = -0.75 add_devotion = -1 add_horde_unity = -1 add_meritocracy = -1 }

		set_key = { lhs = Tmp_0 value = 0 }
	}
	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = NO_ConsortOrigin
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = NO_ConsortOrigin }
			remove_province_modifier = NO_ConsortOrigin
		}
	}
	decentral_collapse_check = yes	
	vassal_type_tracking_effect = yes
	set_country_flag = ai_tax_recalc
	if = {
		limit = {
			chinese_imperial_gov_trigger = yes
			culture_group = chinese_group
			has_new_dynasty = yes
		}
		country_event = { id = tianxia.035 days = 5 }
	}
	if = {
		limit = {
			tag = DLH
			has_disaster = TwilightOfHindustan
			OR = {
				corruption = 30
				NOT = { check_key = { lhs = Ruler_Skill value = 9 } }
				AND = {
					NOT = { check_key = { lhs = Ruler_Skill value = 12 } }
					corruption = 20
				}
			}
			NOT = { has_global_flag = DLH_Collapse }
		}
		country_event = { id = India.03 }
	}
	if = {
		limit = {
			tag = BLU
			has_country_flag = Tokhtamysh
			NOT = { has_country_flag = Tokhtamysh_Has }
			NOT = { has_country_flag = SpawnedTokhtamysh }
		}
		set_country_flag = SpawnedTokhtamysh
		country_event = { id = timur.46 days = 60 random = 30 }
	}
	if = { limit = { has_country_modifier = Emperor_Gemeiner_Pfennig is_emperor = no }
		remove_country_modifier = Emperor_Gemeiner_Pfennig
		set_key = { lhs = Tax_Emperor value = 0 }
		every_owned_province = { add_province_modifier = { name = HRE_Gemeiner_Pfennig duration = -1 } }
		emperor = { 
			add_country_modifier = { name = Emperor_Gemeiner_Pfennig duration = -1 }
			every_owned_province = { remove_province_modifier = HRE_Gemeiner_Pfennig }
		}
	}
	if = {
		limit = {
			has_regency = no
			NOT = {
				has_ruler_flag = had_culture_religion_reaction_event_flag
			}
			NOT = {
				OR = {
					has_reform = Pol_Succession2
					has_reform = Pol_Succession4
				}

			}
			NOT = {
				tag = PAP
			}
			OR = {
				NOT = {
					ruler_culture = ROOT
				}
				NOT = {
					ruler_religion = ROOT
				}
			}
		}
		set_country_flag = had_culture_religion_reaction_event_flag
		country_event = {
			id = culture_religion_events.2
			days = 75
			random = 7
		}
	}
	if = {
		limit = {
			tag = SWE
			has_country_flag = erik_s_rebellion
			NOT = { RSW = { has_ruler = "Erik Magnusson" } }
		}
		country_event = { id = flavor_swe.4303 }
	}
	if = {
		limit = {
			tag = RSW
			has_country_flag = erik_s_rebellion
			NOT = { SWE = { has_ruler = "Magnus IV Ericson" } }
		}
		country_event = { id = flavor_swe.4304 }
	}
	
	events = {
		japan.15						# Shogun dies childless
		japan.13						# Son of the Retired Emperor (Shogun) becomes the new Emperor
		horde_events.100				# Break apart some temporary unions
		flavor_chu.6					# Chupanid multi-war
		horde_mechanic_events.1			# Applies the proper khanate/puppet khanate state
		#fe_MOL.1						# Moldavia/Walachia decides on Overlord
		tianxia.137						# Appenage dies out
		Horde_Collapse.11			# Horde unifier united clans
		Horde_Collapse.12			# Horde unifier fails the clans
		timur.14			# Subjects breaking free as Moghul
		ghazi.3
		Ottomans.012
		Ottomans.013
		#italy_fifteenthirty.001 
		#hre_dynastic_event.001 
		welfs_dynastic.1 
		welfs_dynastic.3 
		welfs_dynastic.4 
		welfs_dynastic.5 
		wettin_dynastic.1 
		wettin_dynastic.2 
		wettin_dynastic.3 
		wettin_dynastic.4 
		wettin_dynastic.5 
		wettin_dynastic.6 
		wettin_dynastic.7 
		wettin_dynastic.8
		flavor_nap.1				#Naples, nobles trying to setup French pretender if d'Anjou are gone
		flavor_spa.3004 
		flavor_hab.1011 
		flavor_hab.1018
		flavor_bav.203 
		flavor_bav.204
		flavor_brapru.300 
		flavor_brapru.800
		flavor_bur.1001 
		flavor_fla.1
		treaty_pavia.1000
		flavor_mlo.1				#Ambrosian Republic
		flavor_muz.1 				#Fars breakup on ruler death
		flavor_tur.102 				#Janissary Reward
		hohenzollerns_1530.1			# Hohenzollern Sucession, Pommerania
		hohenzollerns_1530.2			# Hohenzollern Sucession, Pommerania w/Prussia
		hohenzollerns_1530.3			# Hohenzollern Sucession, Hohenzollern Minors
		hohenzollerns_1530.4			# Hohenzollern Sucession, Hohenzollern Minors w/Prussia
		hohenzollerns_1530.5			# Hohenzollern Sucession, Prussia
		hohenzollerns_1530.6			# Hohenzollern Sucession, Brandenburg->Prussia
		hohenzollerns_1530.7			# Hohenzollern Sucession, Brandenburg->Hohenzollern
		hohenzollerns_1530.8			# Hohenzollern Sucession, Brandenburg->Ansbach
		hohenzollerns_1530.9			# Hohenzollern Sucession, Brandenburg->Bayreuth
		flavor_pol.601					#Polish-Lithuanion union signings
		flavor_pol.602
		flavor_pol.603
		flavor_pol.604
		flavor_tur.3377 	#Powerful Haseki Sultan
	}
	has_heir_check = yes #this should always come last	 
}

on_new_consort = {
	#country_event = { id = consort_events.2 }			#no event to be called
	if = {
		limit = { has_ruler_flag = had_10_years_anniversary }
		clr_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = had_20_years_anniversary }
		clr_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = consort_had_affection_of_ruler }
		clr_ruler_flag = consort_had_affection_of_ruler
	}
}

# country
on_regent = {
	events = {
		PTM_Politics.007				# Ruler Calc for Exec Auth
		PTM_Politics.005				# Ruler Alignment for Factions
		treaty_pavia.1000
	}
	if = {
		limit = {
			NOT = {
				has_global_flag = death_of_haji_giray
			}
			tag = CRI
		}
		if = {
			limit = {
				exists = TUR
				AND = {
					OR = {
						is_subject = no
						is_subject_of_type = tributary_state
						is_subject_of_type = close_tributary_state
					}
				}
				TUR = {
					num_of_cities = ROOT
					AND = {
						OR = {
							is_subject = no
							is_subject_of_type = tributary_state
							is_subject_of_type = close_tributary_state
						}
					}
					num_of_ports = 1
				}
			}
			country_event = {
				id = flavor_cri.1
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						exists = TUR
					}
					AND = {
						is_subject = yes
						NOT = {
							is_subject_of_type = tributary_state
						}
						NOT = {
							is_subject_of_type = close_tributary_state
						}
					}
					TUR = {
						NOT = {
							num_of_cities = ROOT
						}
					}
					TUR = {
						AND = {
							is_subject = yes
							NOT = {
								is_subject_of_type = tributary_state
							}
							NOT = {
								is_subject_of_type = close_tributary_state
							}
						}
					}
					TUR = {
						NOT = {
							num_of_ports = 1
						}
					}
				}
			}
			set_global_flag = death_of_haji_giray
		}
	}
}

# country
on_new_term_election = {
	events = {
		700		# Election event
		medici_system.4 
		medici_system.12 
		medici_system.48
	}
}

on_death_election = {
	if = {
		limit = { is_key_equal = { lhs = Pol_ExtraPowers value = 1 } }
		remove_government_reform = Pol_ExtraPowers2
		add_government_reform = Pol_ExtraPowers1
	}
	if = {
		limit = {
			tag = FIR
		}
		country_event = {
			id = medici_system.13
			days = 10
		}
	}
	events = {
		701		# Election event
		elections.800	# Lottery election
		medici_system.1 
		medici_system.2 
		medici_system.3 
		medici_system.49
	}
}

# country
on_death_foreign_slave_ruler = {
	events = {
		mamluk_events.0 # Choose new ruler
	}
}

# country
on_replace_governor = {
	events = {
		elections.707
	}
}

# country
on_bankruptcy = {
}

# country (country annexing, FROM = target)
on_diplomatic_annex = {
	events = { 
		flavor_anj.3
	}
}

# country
on_heir_death = {
	if = {
		limit = {
			tag = AAA
		}
		if = { limit = { has_heir = "dummy_betray_chinese_lord" }
			event_target:betray_chinese_lord_trigger = {
				country_event = { id = tianxia.004 }
			}
		}
	}

	appanage_reversion_effect = yes
	has_heir_check = yes #this should always come last
}

# country
on_queen_death = {
	if = {
		limit = {
			any_owned_province = {
				has_province_modifier = NO_ConsortOrigin
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = NO_ConsortOrigin }
			remove_province_modifier = NO_ConsortOrigin
		}
	}
}

# country
on_new_heir = {
	if = {
		limit = {
			tag = AAA
		}
		if = { limit = { has_heir = "dummy_betray_chinese_lord" }
			event_target:betray_chinese_lord_trigger = {
				country_event = { id = tianxia.004 }
			}
		}
	}
	if = { #does not work as a scripted effect for some reason
		limit = {
			has_government_attribute = dynamic_heir_claim
		}
		add_heir_claim = -100
		add_heir_claim = 20
		if = {
			limit = {
				heir_adm = 6
			}
			add_heir_claim = 24
		}
		else_if = {
			limit = {
				heir_adm = 5
			}
			add_heir_claim = 20
		}
		else_if = {
			limit = {
				heir_adm = 4
			}
			add_heir_claim = 16
		}
		else_if = {
			limit = {
				heir_adm = 3
			}
			add_heir_claim = 12
		}
		else_if = {
			limit = {
				heir_adm = 2
			}
			add_heir_claim = 8
		}
		else_if = {
			limit = {
				heir_adm = 1
			}
			add_heir_claim = 4
		}
		if = {
			limit = {
				heir_mil = 6
			}
			add_heir_claim = 24
		}
		else_if = {
			limit = {
				heir_mil = 5
			}
			add_heir_claim = 20
		}
		else_if = {
			limit = {
				heir_mil = 4
			}
			add_heir_claim = 16
		}
		else_if = {
			limit = {
				heir_mil = 3
			}
			add_heir_claim = 12
		}
		else_if = {
			limit = {
				heir_mil = 2
			}
			add_heir_claim = 8
		}
		else_if = {
			limit = {
				heir_mil = 1
			}
			add_heir_claim = 4
		}
		if = {
			limit = {
				heir_dip = 6
			}
			add_heir_claim = 24
		}
		else_if = {
			limit = {
				heir_dip = 5
			}
			add_heir_claim = 20
		}
		else_if = {
			limit = {
				heir_dip = 4
			}
			add_heir_claim = 16
		}
		else_if = {
			limit = {
				heir_dip = 3
			}
			add_heir_claim = 12
		}
		else_if = {
			limit = {
				heir_dip = 2
			}
			add_heir_claim = 8
		}
		else_if = {
			limit = {
				heir_dip = 1
			}
			add_heir_claim = 4
		}
	}
	has_heir_check = yes #this should always come last
}

# country #when an heir with a weak claim ascends
on_weak_heir_claim = {
	if = {
		limit = {
			competitive_trigger = no
			has_country_flag = POP_Init
			NOT = { Timur_Has = yes }
		}
		if = {
			limit = {
				steppe_trigger = yes
			}
			random_owned_province = {
				limit = {
					is_capital = no
					is_overseas = no
					development = 3
				}
				pretender_rebels = 1
			}
			random_owned_province = {
				limit = {
					is_capital = no
					is_overseas = no
					development = 5
				}
				pretender_rebels = 2
			}
		}
		else = {
			random_owned_province = {
				limit = {
					is_capital = no
					is_overseas = no
					development = 5
				}
				pretender_rebels = 1
			}
		}
	}
	events = {
	}
}
# country : no heir in theocracy
on_heir_needed_theocracy = {
	define_heir = {
		dynasty = ROOT
	}
	events = {
	}
}

# Emperor from same dynasty
on_successive_emperor = {
	emperor = {
		save_global_event_target_as = Emperor
	}
	events = {
		holyromanempire.900
	}
}

# Called whenever a new emperor is elected
# FROM = Previous Emperor
# ROOT = New Emperor 
on_emperor_elected = {
	emperor = {
		save_global_event_target_as = Emperor
	}
}

# HRE Prince released by the emperor
on_released_hre_member = {
	events = {
	}
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {
	events = {
	}
}

# HRE Prince converts to non-Emperor religion
on_hre_member_true_religion = {
	events = {
	}
}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {
	events = {
	}
}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
	events = {
	}
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
	events = {
	}
}

# HRE member transferred from non-HRE vassalage to Emperor
on_hre_transfered_vassal = {
	events = {
	}
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
	events = {
	}
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
	events = {
	}
}

# HRE Member takes a HRE province from an outside country in a peace (province scope)
on_hre_province_reconquest = {
	events = {
	}
}

on_lock_hre_religion = {
	events = {
	}
}

on_change_hre_religion = {
	events = {
	}
}

on_hre_religion_white_peace = {
	events = {
	}
}

# When a non-native changes government type
on_government_change = {
	if = {
		limit = {
			NOT = { monarchy_or_harem_gov = yes }
			any_owned_province = {
				has_province_modifier = NO_ConsortOrigin
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = NO_ConsortOrigin }
			remove_province_modifier = NO_ConsortOrigin
		}
	}
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
	#despotisation_effect = yes
}

# Nation is integrated after being in union
# seems to not support Scopes or is not triggered by diplomatic action (perhaps only triggered by inheritance)
on_integrate = {
	events = {
	}
}

# Nation annexed
# FROM is the nation being annexed, ROOT is the annexing country
# Also triggered by diplomatic actions annexationaction and also integrationaction
on_annexed = {
	if = {
		limit = {
			NOT = { has_global_flag = POP_Sim }
		}
		if = {
			limit = {
				has_country_modifier = mongol_xingsheng
				#any_subject_country = { has_country_flag = red_turban_reb }
			}
			country_event = { id = red_turban.024 }
		}
		FROM = {
			clr_country_flag = POP_Init
			set_key = { lhs = Vassal_Type value = 0 }

			if = { limit = {
					is_subject_other_than_tributary_trigger = yes
					ROOT = { overlord_of = FROM }
				}
				diplomatic_annexation_subject_transfer_effect = yes
			}
			else = {
				war_annexation_subject_transfer_effect = yes
			}
		}
	}
	events = {
	}
}

on_embrace_revolution = {
	set_country_flag = had_revolution
}

on_dismantle_revolution = {
	parliamentarisation_effect = yes
	exile_ruler_as = revolution_target_ruler #they'll be back ;)
	set_revolution_target = ---
	if = {
		limit = { has_heir = yes }
		exile_heir_as = revolution_target_heir
	}
	events = {
	}
}

# province
on_adm_development = {
	if = { limit = { base_tax = 0 }
		add_base_tax = -1
	}

	owner = {
		change_key = { lhs = Class_Layer value = 1 }

		if = {
			limit = {
				OR = {
					check_key = { lhs = Class_Layer value = 5 }
					
					AND = {
						NOT = {
							has_country_flag = UI_Tooltip_On
						}
						
						check_key = { lhs = Class_Layer value = 4 }
					}
				}
			}
			set_key = { lhs = Class_Layer value = 0 }
		}

		every_owned_province = {
			limit = {
				isValidEmpty = yes
			}
			set_key = { lhs = Class_Layer which = PREV }
		}
	}
}

# province #not used
on_dip_development = {
	if = { limit = { base_production = 0 }
		add_base_production = -1
	}
	if = {
		limit = {
			owner = { NOT = { has_country_flag = UI_Freeze } }
		}
		if = {
			limit = {
				OR = {
					has_province_flag = Pin_Show
					has_province_flag = UI_Select
				}
			}
			Pow_UI_R = yes
		} 
		else = {
			Pow_UI = yes
		}
	}
}

# province #not used
on_mil_development = {
	if = { limit = { base_manpower = 0 }
		add_base_manpower = -1
	}

	if = {
		limit = {
			owner = { NOT = { has_country_flag = UI_Freeze } }
		}
		if = {
			limit = {
				OR = {
					has_province_flag = Pin_Show
					has_province_flag = UI_Select
				}
			}
			Pow_UI_R = yes
		}
		else = {
			Pow_UI = yes
		}
	}
}

on_overextension_pulse = {
}

on_colonial_pulse = {
	random_events = {
		10000 = 0
		100 = colonial.12
		100 = colonial.17
	}
}

on_siberian_pulse = {
}


# country random events
on_bi_yearly_pulse = {
	if = {
		limit = {
			ai = yes
			isValidCountry = yes
		}
#		country_event = { 
#			id = POP_AI.001 
#		}
		country_event = { id = AI_Budget.2 }
	}
    if = {
        limit = { tag = AAA }
        if = {
            limit = { is_religion_enabled = protestant NOT = { religion_years = { protestant = 100 } } NOT = { has_global_flag = pro_schism_compromise } NOT = { has_global_flag = pro_schism_mended } }
            country_event = { id = DG_Protestant.100 days = 120 } 
            country_event = { id = DG_Protestant.100 days = 385 } 
        }
    }
    if = {
        limit = { tag = AAA }
        if = {
            limit = { is_religion_enabled = reformed NOT = { religion_years = { reformed = 100 } } NOT = { has_global_flag = ref_schism_compromise } NOT = { has_global_flag = ref_schism_mended } }
            country_event = { id = DG_Reformed.100 days = 130 }
        }
    }
	events = {
		PTM_Politics.100 	# Trigger rivalry
		ostsiedlung.1001
		red_turban.028
		timur.20 			# greater iran cleanup
		POP_Census.708 		# Forced tech upgrades
		POP_Census.709		# Forced exploration idea group progression
		Ottomans.028
		SYS_Colony.003
	}
	random_events = {
		100 = PTM_Politics.003 
		100 = PTM_Politics.004 
		100 = PTM_Politics.008
		#Mamluk Events

		175 = mamluk_events.1
		175 = mamluk_events.3
		235 = mamluk_events.4
		185 = mamluk_events.5

		#Culture and Religion Events
		75 = culture_religion_events.1
		#75 = culture_religion_events.3
		#75 = culture_religion_events.4
		#75 = culture_religion_events.5
		75 = culture_religion_events.6
		75 = culture_religion_events.7
		75 = culture_religion_events.8
		75 = culture_religion_events.9
		75 = culture_religion_events.10
		75 = culture_religion_events.11
		75 = culture_religion_events.12
		75 = culture_religion_events.13
		75 = culture_religion_events.14
		75 = culture_religion_events.15
		75 = culture_religion_events.16
		50 = culture_religion_events.17
		75 = culture_religion_events.18
		75 = culture_religion_events.19
		75 = culture_religion_events.20
		#125 = culture_religion_events.21
		75 = culture_religion_events.22
		75 = culture_religion_events.23
		
		100 = DG_Papacy.701
		100 = DG_Papacy.702
		100 = DG_Papacy.703
		100 = DG_Papacy.704
		100 = DG_Papacy.705

		5000 = 0
	}
 	if = {
		limit = {
			tag = AAA
		}
		country_event = { id = higher_education_events.0 }
	}
}

on_bi_yearly_pulse_2 = {
#	every_owned_province = {
#		limit = {
#			isValidEmpty = yes
#		}
#		MN_GetSlot_Class = yes
#	}
	if = {
		limit = {
			ai = yes
			isValidCountry = yes
		}
		country_event = { id = Prov_UI.041 } # Burgher Grant (interact)
		country_event = { id = Prov_UI.040 } # Noble Grant (interact)
	}
    if = {
        limit = { tag = AAA }
        if = {
            limit = { is_religion_enabled = hussite OR = { AND = { any_country = { religion = hussite } NOT = { religion_years = { hussite = 100 } } } AND = { NOT = { any_country = { religion = hussite } } NOT = { religion_years = { hussite = 50 } } } }  NOT = { has_global_flag = hus_schism_compromise } NOT = { has_global_flag = hus_schism_mended } }
            country_event = { id = DG_Hussites.100 days = 110 } 
        }
    }
	if = {
		limit = { tag = PAP  }
		country_event = { id = DG_Papacy.999 }
		country_event = { id = DG_Papacy.999 days = 365 }
	}
	events = {
		DG_Convert.002
		mec_vassals.10
	}
 	if = {
		limit = {
			tag = AAA
		}
		country_event = { id = higher_education_events.0 }
	}
}

on_bi_yearly_pulse_3 = {
	if = {
		limit = {
			ai = yes
			isValidCountry = yes
		}
		country_event = { id = Prov_UI.042 } # Clergy Grant (interact)
		country_event = { id = Prov_UI.046 } # Anti-corruption measures (interact)
	}
 	if = {
		limit = {
			tag = AAA
		}
		country_event = { id = flavor_hyw.100 }
	}
	if = {
        limit = { tag = AAA }
        if = {
            limit = { is_religion_enabled = lollard OR = { AND = { any_country = { religion = lollard } NOT = { religion_years = { lollard = 100 } } } AND = { NOT = { any_country = { religion = lollard } } NOT = { religion_years = { lollard = 50 } } } } NOT = { has_global_flag = lol_schism_compromise } NOT = { has_global_flag = lol_schism_mended } }
            country_event = { id = DG_Lollards.100 days = 160 } 
        }
    }
	events = {
		red_turban.006
		red_turban.007
		flavor_swe.4305
	}
}

on_bi_yearly_pulse_4 = {
	if = {
		limit = {
			ai = yes
			isValidCountry = yes
		}
		country_event = { id = Prov_UI.043 } # Clans Grant (interact)
		country_event = { id = Prov_UI.011 } # Nobles Grant (privileges)
	}
	if = {
        limit = { tag = AAA }
        if = {
            limit = { is_religion_enabled = waldensian  OR = { AND = { any_country = { religion = waldensian } NOT = { religion_years = { waldensian = 100 } } } AND = { NOT = { any_country = { religion = waldensian } } NOT = { religion_years = { waldensian = 50 } } } }  NOT = { has_global_flag = wal_schism_compromise } NOT = { has_global_flag = wal_schism_mended } }
            country_event = { id = DG_Waldensians.100 days = 150 }
        }
	}
	events = {
		POP_DG.004
	}
}

on_thri_yearly_pulse = {
 	if = {
		limit = {
			ai = yes
			isValidCountry = yes
		}
		country_event = { id = Prov_UI.044 } # Bureau Grant (interact)
		country_event = { id = Prov_UI.045 } # Welfare (interact)
		
	}
    events = {
        #POP_Census.116 # edu system
        POP_Census.707 # trade centers
		flavor_hyw.13 #England lost their French possesions, so loses the HYW
    }
	if = {
		limit = {
			num_of_cities = 8
		}
		set_country_flag = ai_tax_recalc
	}
}

on_thri_yearly_pulse_2 = {
 	if = {
		limit = {
			ai = yes
			isValidCountry = yes
		}
		country_event = { id = Prov_UI.021 } # Nobles Revoke (privileges)
		country_event = { id = Prov_UI.063 } # Clans Revoke (interact)		
	}
	events = {
	}
}

on_thri_yearly_pulse_3 = {
	if = {
		limit = {
			ai = yes
			isValidCountry = yes
		}
		country_event = { id = Prov_UI.019 } # Bureau Revoke (privileges)
		country_event = { id = Prov_UI.061 } # Burgher Revoke (interact)
		
	}
    events = {
        AI_Invest.2
    }
}

on_thri_yearly_pulse_4 = {
	if = {
		limit = {
			ai = yes
			isValidCountry = yes
		}
		country_event = { id = Prov_UI.062 } # Clergy Revoke (interact)
		country_event = { id = Prov_UI.060 } # Noble Revoke (interact)
		
	}
	events = {
	}
}

on_four_year_pulse = {
	#if = {
	#	limit = {
	#		ai = yes
	#		isValidCountry = yes
	#	}
	#	#country_event = { id = Prov_UI.013 } # Burghers Grant (privileges)
	#	#country_event = { id = Prov_UI.023 } # Burghers Revoke (privileges)
	#	
	#}
	events = {
	}
	random_events = {
		1000 = 0
		25 = colonial_nation.4
		25 = colonial_nation.10
		25 = colonial_nation.12
		25 = colonial_nation.14
		25 = colonial_nation.77
	}
}

on_four_year_pulse_2 = {
	#if = {
	#	limit = {
	#		ai = yes
	#		isValidCountry = yes
	#	}
	#	#country_event = { id = Prov_UI.015 } # Clergy Grant (privileges)
	#	#country_event = { id = Prov_UI.025 } # Clergy Revoke (privileges)
	#	
	#}
	if = {
		limit = { ai = yes western_christian = yes NOT = { has_country_modifier = evangel_cm } }
		country_event = { id = DG_Inquisition.001 }
	}
	events = {
	}
}

on_four_year_pulse_3 = {
	#if = {
	#	limit = {
	#		ai = yes
	#		isValidCountry = yes
	#	}
	#	#country_event = { id = Prov_UI.017 } # Clans Grant (privileges)
	#	#country_event = { id = Prov_UI.027 } # Clans Revoke (privileges)
	#	
	#}
	events = {
	}
}

on_four_year_pulse_4 = {
    events = {
        AI_Invest.3
    }
	if = {
		limit = {
			NOT = { num_of_cities = 8 }
			num_of_cities = 4
		}
		set_country_flag = ai_tax_recalc
	}
}

on_five_year_pulse = {
	events = {
		AI_Invest.1
        AI_Invest.4
        Plague_Spawner.5
		flavor_spa.8002
        #POP_Census.117 # World education system
		flavor_hyw.31
	}
    random_events = {
        50 = Plague_Spawner.1
        50 = 0
    }
}

on_five_year_pulse_2 = {
	events = {
		AI_Budget.1
	}
    random_events = {
        750 = counts_feud.003
        1000 = 0
		200 = haiti.4				#Culture of Caribean colony changes to Maroon
		75 = flavor_hab.3201		#Austian flavor events, moved to on_actions triggered to save performance
		150 = flavor_hab.3203 
		300 = flavor_hab.3202       
		300 = flavor_hab.3208
		550 = flavor_hab.3099
		550 = flavor_hab.3328
		550 = flavor_hab.3332
		550 = flavor_hab.3333
		550 = flavor_hab.1
		550 = flavor_hab.2
		550 = flavor_hab.4
		250 = flavor_hab.6
		1000 = flavor_hab.7
		5000 = flavor_hab.5191
		550 = flavor_hab.1007
		4000 = hee_HAB.3
		5000 = flavor_hab.5190
		250 = colonial_nation.75
    }
}

on_five_year_pulse_3 = {
	if = {
		limit = {
			tag = AAA	
		}
		country_event = { id = POP_Census.995 }
	}
	if = {
		limit = {
			NOT = { num_of_cities = 4 }
		}
		set_country_flag = ai_tax_recalc
	}
	if = {
		limit = { ai = yes western_christian = yes NOT = { dominant_religion = owner } NOT = { religion = overlord } }
		country_event = { id = DG_Convert.301 }
	}
}

on_five_year_pulse_4 = {
	set_country_flag = tf_recalculate_communication_efficiency
	if = {
		limit = {
			tag = AAA
		}
		country_event = { id = mission_event.999 } #flavour from missions the AI can't complete
	}
    events = {
        slots.1
    }
    random_events = {
        50 = AI_Budget.11
        50 = 0
    }
	
	if = { #movement of capitals by CN's
		limit = {
			is_colonial_nation = yes
		}
		country_event = { id = colonial_nation.201 } #Brazil
		country_event = { id = colonial_nation.202 } #Canada
		country_event = { id = colonial_nation.203 } #La Plata
		country_event = { id = colonial_nation.204 } #California
		country_event = { id = colonial_nation.205 } #Louisiana
		country_event = { id = colonial_nation.206 } #Eastern America
		country_event = { id = colonial_nation.207 } #Hispaniola/Caribeans
	}
}

# El Dorado
on_explore_coast = {
}

on_conquistador_empty = {
}

on_conquistador_native = {
}

on_buy_religious_reform = {
	events = {
	}
}

on_circumnavigation = {
	log = "Circumnavigation achieved [From.GetName][Root.GetName]"
	events = {
	}
}

on_become_free_city = {
	make_free_city_effect = yes
}

on_remove_free_city = {
	add_government_reform = Pol_Privileges1
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
}

on_revoke_estate_land = {
	#if = {
	#	limit = {
	#		owner = { NOT = { has_country_flag = UI_Freeze } }
	#	}
	#	Pow_UI_R = yes
	#}
	#else = {
	#	#set_estate = UI_Select
	#}
}
on_revoke_estate_land_ai_post = {
}
on_revoke_estate_land_post = {
}

on_grant_estate_land = {
	#if = {
	#	limit = {
	#		owner = { NOT = { has_country_flag = UI_Freeze } }
	#	}
	#	Pow_UI = yes
	#}
	#else = {
	#	#remove_estate = UI_Select
	#}
}

on_death_has_harem = {
	if = {
		limit = {
			has_heir = no
			OR = {
				has_country_flag = Timur_Dead
				NOT = { has_country_flag = Horde_Timur }
			}
		}
		country_event = { id = harem_events.2 }
	}
}

on_select_heir_from_harem = {
}

on_fetishist_cult_change = {

}

# country
on_gain_great_power_status = {
	if = {
		limit = {
			NOT = { has_country_flag = became_great_power_flag }
		}
		set_country_flag = became_great_power_flag
	}
}

# country
on_lose_great_power_status = {
}

# province
# Triggers only on missionary conversion. No Centers of Reformation, Trade Religion Propagation or Effects. - Inimicus
on_province_religion_converted = {
	DG_on_province_religion_converted_effect = yes
}

# province
on_province_culture_converted = {
	if = {
		limit = {
			always = yes
		}
		if = {
			limit = { NOT = { check_key = { lhs = Culture_Progress value = 80 } } }
			hidden_effect = {
				change_key = { lhs = Culture_Progress value = 20 }
				change_culture = variable:Culture_Prev
			}
			custom_tooltip = Culture_20
		}
		else = {
			hidden_effect = {
				set_key = { lhs = Culture_Progress value = 0 }
			}
		}
	}
}

# THIS = Province, FROM = Country who Propogated
# WORKS EXACTLY AS ADVERTISED. AAAAAAAAAAAAAAA - Inimicus
on_convert_by_trade_policy = {
	DG_on_convert_by_trade_policy_effect = yes
}

# province
on_province_owner_change = {
	if = {
		limit = {
			NOT = { has_global_flag = POP_Sim }
		}
		if = { #uncolonised -> owned
			limit = {
				NOT = {
					FROM = { always = yes }
				}
			}
			add_province_triggered_modifier = colony_income
			add_province_triggered_modifier = colony_tracker
		}
		clr_province_flag = LandInt
		set_key = { lhs = LandInt_Units value = 0 }
		Prov_OwnerChange_effect = yes
		DiploAnnex_Remove = yes
		if = {
			limit = {
				NOT = { is_month = 1 }
				owner = { NOT = { has_country_flag = POP_Init } }
				owner = { num_of_cities = 1 }
				isValidProv = yes
			}
			owner = {
				Init_Main = yes
				set_country_flag = POP_Init
			}
		}
		FROM  = {
			if = {
				limit = {
					OR = {
						exists = no
						NOT = { num_of_cities = 1 }
					}
				}
				clr_country_flag = POP_Init
				set_key = { lhs = Vassal_Type value = 0 }
			}
			else = {
				set_country_flag = ai_tax_recalc
			}
		}
		owner = { country_event = { id = flavor_tre.1 } }
		
		if = {
			limit = {
				is_city = yes
			}
			AI_TaxClean = yes
			AI_MaintClean = yes
			
			owner = {
				set_country_flag = ai_tax_recalc
			}
			SetStateMaintOnProvChange = yes
		}
		if = {
			limit = {
				AND = {
				
					12 = { has_province_modifier = oresund_toll_tm } #Check that the toll exists
				
					OR = { #Check that the province that changes hands is one of whose control allows the toll to be implemented
					
						province_id = 12	# Copenhagen
						province_id = 14	# Fyun
						province_id = 15	# Jutland
						province_id = 1428 # Laland
						province_id = 2755	# Syaland
						province_id = 6 # Skane
					}
				}	
			}
			12 = { remove_province_modifier = oresund_toll_tm }
		}
	}
	if = {
		limit = {
			latin_med_coast = yes
			owner = { religion_group = christian }
			NOT = { owner = { has_country_flag = ifrikiya_ambitions } }
		}
		owner = {
			set_country_flag = ifrikiya_ambitions
			swap_non_generic_missions = yes
		}
	}
	else_if = {
		limit = {
			maghreb_med_coast = yes
			owner = { religion_group = muslim }
			NOT = { owner = { has_country_flag = s_of_rum } }
			NOT = { owner = { has_country_flag = uwrubba_ambitions } }
		}
		owner = {
			set_country_flag = uwrubba_ambitions
			swap_non_generic_missions = yes
		}
	}
	if = {
		limit = { MN_CheckSize = { religion = 1 type = Inquis prop = 1 } }
		MN_Attribute_Reset = { reltype = value religion = 1 typeEffect = Inquis typeStrength = value strength = 0 }
	}
	else_if = {
		limit = { MN_CheckSize = { religion = 2 type = Inquis prop = 1 } }
		MN_Attribute_Reset = { reltype = value religion = 2 typeEffect = Inquis typeStrength = value strength = 0 }
	}
	else_if = {
		limit = { MN_CheckSize = { religion = 3 type = Inquis prop = 1 } }
		MN_Attribute_Reset = { reltype = value religion = 3 typeEffect = Inquis typeStrength = value strength = 0 }
	}
	else_if = {
		limit = { MN_CheckSize = { religion = 4 type = Inquis prop = 1 } }
		MN_Attribute_Reset = { reltype = value religion = 4 typeEffect = Inquis typeStrength = value strength = 0 }
	}
	else_if = {
		limit = { MN_CheckSize = { religion = 5 type = Inquis prop = 1 } }
		MN_Attribute_Reset = { reltype = value religion = 5 typeEffect = Inquis typeStrength = value strength = 0 }
	}
	else_if = {
		limit = { MN_CheckSize = { religion = 6 type = Inquis prop = 1 } }
		MN_Attribute_Reset = { reltype = value religion = 6 typeEffect = Inquis typeStrength = value strength = 0 }
	}
	events = {
		DG_Convert.003
		SYS_Colony.001
	}
}

# country
on_parliament_debate_failed = {
}

# country
on_parliament_debate_succeeded = {
}

#Chinese Empire on_actions

# When the chinese empire gets dismantled (e.g. when the emperor is annexed)
# FROM = Emperor, ROOT = Current Nation
on_chinese_empire_dismantled = {
	clear_global_event_target = EmperorOfChina
}

# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {
	save_global_event_target_as = EmperorOfChina
	if = {
		limit = {
			OR = {
				NOT = { monarchy_or_harem_gov = yes }
				government = tribal
			}
		}
		change_government = monarchy
		add_government_reform = Pol_Succession5
		add_government_reform = Pol_Assembly1
		add_government_reform = Pol_Nobility1
	}
	add_government_reform = celestial_empire
	set_meritocracy = 60
}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {
	Stab_Subtract2 = yes
	remove_government_reform = celestial_empire
	add_government_reform = Pol_Privileges1
}

# country
on_harmonized_pagan = {
}

on_harmonized_christian = {
}

on_harmonized_muslim = {
}

on_harmonized_jewish_group = {
}

on_harmonized_taoic = {
}

on_harmonized_dharmic = {
}

on_harmonized_mahayana = {
}

on_harmonized_buddhism = { #Theravada
}

on_harmonized_shinto = {
}

on_harmonized_vajrayana = {
}

on_harmonized_new_world_pagan = {
}

on_harmonized_european_pagan = {
}

# country
on_russian_sudebnik = {

}

# country
on_russian_oprichnina = {

}

# country
on_russian_streltsy = {

}

# province
on_consecrate_patriarch = {
}

# country. from = overlord
on_accept_tribute = {
}

# country. from = overlord
on_refuse_tribute = {
}

# country
on_leader_recruited = {
}

# country
on_general_recruited = {
	add_army_professionalism = 0.0025
}

# country
on_admiral_recruited = {
}

# country
on_conquistador_recruited = {
}

# country
on_explorer_recruited = {
}

# THIS = Province, FROM = Country
on_regiment_recruited = {
}

# THIS = Province, FROM = Country
on_mercenary_recruited = {
	FROM = {
		add_army_professionalism = -0.0025
		hidden_effect = { Merc_Update = yes }
	}
}

# THIS = One province in the state
on_add_pasha = {
}

# THIS = One province in the state
on_remove_pasha = {
}

# THIS = Province
on_janissaries_raised = {

}

on_revolutionary_guard_raised = {
}

on_reform_enacted = {
}

on_reform_changed = {
}

on_trade_company_investment = {
}

on_center_of_trade_upgrade = {
}

on_center_of_trade_downgrade = {
}

on_culture_promoted = {

}


# FROM = Previous Country, ROOT = Province
on_company_chartered = {
}

# ROOT = Overlord, FROM = Minor
on_dependency_gained = {
	set_country_flag = tf_recalculate_communication_efficiency
	overlord = { set_country_flag = tf_recalculate_communication_efficiency }
	FROM = { 
		set_country_flag = tf_recalculate_communication_efficiency 
		every_subject_country = { set_country_flag = tf_recalculate_communication_efficiency }
		if = {
			limit = {
				OR = {
					AND = {
						is_subject_of_type = daimyo_vassal
						NOT = { check_key = { lhs = Vassal_Type value = 1 } }
						OR = {
							NOT = { culture_group = japanese_g }
							overlord = { NOT = { culture_group = japanese_g } }
						
						}
					}
					is_subject_of_type = vassal
					
				}
			}
			ROOT = {
				create_subject = {
					subject_type = custom_vassal
					subject = FROM
				}
			}
		}
		Init_Force = yes
	}
	FROM = {
		subject_transition_effect = yes
		set_key = { lhs = Integration_Progress value = 0 }
		set_key = { lhs = Remaining_Years value = 0 }
	}
	FROM = { 
		if = { limit = { is_subject_of_type = personal_union }
			every_subject_country = { limit = { is_subject_of_type = permanent_union }
				grant_independence = yes ROOT = { create_subject = { subject_type = permanent_union 	subject = PREV  } }
			}
			every_country = { #vanilla bug - not sure if it needs to be two sided tbh
				limit = {
					NOT = {
						tag = ROOT
					}
				}
				break_marriage = PREV
				PREV = {
					break_marriage = PREV
				}
			}
		}
	}
	FROM = {
		country_event = {  id = flavor_pol.504 days = 3 }
	}
	events = {
	}
}

# ROOT = Overlord, FROM = Minor
on_dependency_lost = {
	set_country_flag = tf_recalculate_communication_efficiency
	overlord = { set_country_flag = tf_recalculate_communication_efficiency }
	FROM = { 
		set_country_flag = tf_recalculate_communication_efficiency 
		every_subject_country = { set_country_flag = tf_recalculate_communication_efficiency }
		set_key = { lhs = Integration_Progress value = 0 }
		set_key = { lhs = Remaining_Years value = 0 }
		vassal_type_tracking_effect = yes 
	}
}

# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
	FROM = {
		country_event = {
			id = mec_vassals.5
		}
		set_key = { lhs = Integration_Progress value = 0 }
		set_key = { lhs = Remaining_Years value = 0 }
	}
	Init_ExtraForce = yes
	if = {
		limit = {
			tag = PAP
		}
		change_government = theocracy
	}
}

# ROOT = Country establishing it
# First province in state is set
on_holy_order_established = {

}

# When a minority is expelled to a colony
# THIS = Colony, ROOT = Colony, FROM = Home province
on_minority_expelled = {
}

# THIS = Raiding country, FROM = Sea province
on_raid_coast = {
	#if = {
	#	limit = {
	#		has_faction = pr_buccaneers
	#	}
	#	add_faction_influence = {
	#		faction = pr_buccaneers
	#		influence = 1
	#	}
	#}
}

# ROOT = Tag that captured the flagship, FROM = Tag that lost the flagship
on_flagship_captured = {
	FROM = {
		set_country_flag = captured_flagship_country_flag
	}
	ROOT = {
		country_event = { id = flagship_events.2 }
		set_country_flag = trophy_hunter_flag
	}
	FROM = {
		country_event = { id = flagship_events.1 }
	}
}

# ROOT = Tag that destroyed the flagship, FROM = Tag that lost the flagship
on_flagship_destroyed = {
	FROM = {
		set_country_flag = sunk_flagship_country_flag
	}
	ROOT = {
		country_event = { id = flagship_events.4 }
	}
	FROM = {
		country_event = { id = flagship_events.3 }
	}
}

# this = Released country, FROM = Releasing country
on_country_released = {
	#adopt_reform_progress = FROM not sire this does what we think it does
	Init_ExtraForce = yes
	if = {
		limit = {
			tag = PAP
		}
		change_government = theocracy
		change_religion = catholic
	}
	set_key = { lhs = Vassal_Type value = 0 }
	set_key = { lhs = Integration_Progress value = 0 }
}

# ROOT = province, FROM = country
on_trade_good_changed = {
}

# this = country
on_loan_repaid = {
}

# this = country
on_rebels_break_country = {
}

# this = country
## Fires when you fire or replace your ADM advisor, in the moment before they are actually removed from their post.
## Note: Defining a new advisor here will result in the shortest appointment in history. Use on_post_adm_advisor_fired instead :)
on_pre_adm_advisor_fired = {
}

# this = country
on_pre_dip_advisor_fired = {
}

# this = country
on_pre_mil_advisor_fired = {
}

# this = country
on_post_adm_advisor_fired = {

}

# this = country
on_post_dip_advisor_fired = {
	
}

# this = country
on_post_mil_advisor_fired = {
	
}

# this = new client state, from = parent country
on_create_client_state = {
	if = {
		limit = {
			has_dlc = "Emperor"
			FROM = {
				is_revolutionary = yes
			}
			government = republic
		}
		set_country_flag = had_revolution
	}
}

# this = new target, from = previous target (both can be non-existent tag)
on_change_revolution_target = {
}

# this = curia controller (enactor of the bull)
on_golden_bull_enacted = {
	set_country_flag = enacted_golden_bull
}


# province:  spawned whenever a new owner takes over the province
# FROM = The previous owner.
on_conquest = {
}

on_country_creation = {
	if = {
		limit = {
			tag = PAP
			OR = {
				NOT = {
					religion = catholic
				}
				NOT = {
					government = theocracy
				}
			}
		}
		change_religion = catholic
		change_government = theocracy
	}
}
